[{"D:\\PROJELER\\MERNBlog\\client\\src\\index.js":"1","D:\\PROJELER\\MERNBlog\\client\\src\\App.js":"2","D:\\PROJELER\\MERNBlog\\client\\src\\store.js":"3","D:\\PROJELER\\MERNBlog\\client\\src\\reducers\\rootReducer.js":"4","D:\\PROJELER\\MERNBlog\\client\\src\\components\\PostsList.jsx":"5","D:\\PROJELER\\MERNBlog\\client\\src\\components\\AddPostForm.jsx":"6","D:\\PROJELER\\MERNBlog\\client\\src\\reducers\\post.js":"7","D:\\PROJELER\\MERNBlog\\client\\src\\actions\\types.js":"8","D:\\PROJELER\\MERNBlog\\client\\src\\actions\\post.js":"9","D:\\PROJELER\\MERNBlog\\client\\src\\api\\index.js":"10","D:\\PROJELER\\MERNBlog\\client\\src\\components\\Post.jsx":"11"},{"size":284,"mtime":1611763596536,"results":"12","hashOfConfig":"13"},{"size":2130,"mtime":1611825294585,"results":"14","hashOfConfig":"13"},{"size":353,"mtime":1611763596553,"results":"15","hashOfConfig":"13"},{"size":167,"mtime":1611763596547,"results":"16","hashOfConfig":"13"},{"size":1762,"mtime":1611833407384,"results":"17","hashOfConfig":"13"},{"size":4658,"mtime":1611783070844,"results":"18","hashOfConfig":"13"},{"size":541,"mtime":1611775190233,"results":"19","hashOfConfig":"13"},{"size":87,"mtime":1611773482323,"results":"20","hashOfConfig":"13"},{"size":637,"mtime":1611833934602,"results":"21","hashOfConfig":"13"},{"size":254,"mtime":1611825020836,"results":"22","hashOfConfig":"13"},{"size":2017,"mtime":1611828471617,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ff0p9y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJELER\\MERNBlog\\client\\src\\index.js",[],["48","49"],"D:\\PROJELER\\MERNBlog\\client\\src\\App.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\store.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\reducers\\rootReducer.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\components\\PostsList.jsx",[],"D:\\PROJELER\\MERNBlog\\client\\src\\components\\AddPostForm.jsx",["50","51","52"],"import React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { DialogContentText, makeStyles, makeSyles, Menu } from \"@material-ui/core\";\nimport { Button, TextField, Select, Input, MenuItem, Dialog, DialogActions, DialogContent, DiaglogContentText, DialogTitle } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\"\nimport { createPost } from \"../actions/post\";\nimport FileBase64 from \"react-file-base64\";\nimport * as yup from \"yup\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(2)\n    },\n    textField: {\n        marginBottom: theme.spacing(2)\n    }\n}))\nconst tags = ['fun', 'programming', 'health', 'science'];\nconst postSchema = yup.object().shape({\n    title: yup.string().required(),\n    subtitle: yup.string().required(),\n    content: yup.string().min(30).required(),\n    tag: yup.mixed().oneOf(tags)\n})\n\nconst AddPostForm = ({ open, handleClose }) => {\n    const dispatch = useDispatch();\n    const [file, setFile] = useState(null);\n    const tags = ['fun', 'programming', 'health', \"science\"]\n\n    const onSubmit = (data) => {\n        dispatch(createPost({ ...data, image: file }));\n        clearForm();\n    }\n    const clearForm = () => {\n        reset();\n        setFile(null);\n        handleClose();\n    }\n\n    const { register, handleSubmit, control, errors, reset } = useForm({\n        resolver: yupResolver(postSchema)\n    });\n    const classes = useStyles();\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <DialogTitle>Yeni Yazı Oluştur</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Yeni Bir Yazı Eklemek için Asağıdaki Formu Doldurun\n                    </DialogContentText>\n                <div className={classes.root}>\n                    <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)} >\n                        <TextField\n\n                            id=\"title\"\n                            name=\"title\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            size=\"small\"\n                            label=\"Başlık\"\n                            fullWidth={true}\n                            inputRef={register}\n                            error={errors.title ? true : false}\n                        ></TextField>\n                        <TextField\n                            id=\"subtitle\"\n                            name=\"subtitle\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            size=\"small\"\n                            label=\"Alt Başlık\"\n                            fullWidth={true}\n                            inputRef={register}\n                            error={errors.title ? true : false}\n                        ></TextField>\n                        <Controller\n                            as={\n                                <Select input={<Input />} className={classes.textField} fullWidth>\n                                    {tags.map((tag, index) => {\n                                        return <MenuItem key={index} value={tag}>{tag}</MenuItem>\n                                    })}\n\n                                </Select>\n                            }\n                            name=\"tag\"\n                            control={control}\n                            error={errors.tag ? true : false}\n                            defaultValue={tags[0]}\n                        />\n                        <TextField\n                            id=\"content\"\n                            name=\"content\"\n                            variant=\"outlined\"\n                            className={classes.textField}\n                            size=\"small\"\n                            label=\"İçerik\"\n                            fullWidth={true}\n                            inputRef={register}\n                            error={errors.content ? true : false}\n                        ></TextField>\n                        <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\n\n                    </form>\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"inherit\" onClick={clearForm}>Vazgeç</Button>\n                <Button variant=\"outlined\" type=\"submit\" onClick={() => handleSubmit(onSubmit)()} color=\"primary\">Yayınla</Button>\n\n            </DialogActions>\n\n        </Dialog>\n    )\n}\n\nexport default AddPostForm;","D:\\PROJELER\\MERNBlog\\client\\src\\reducers\\post.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\actions\\types.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\actions\\post.js",["53"],"D:\\PROJELER\\MERNBlog\\client\\src\\api\\index.js",[],"D:\\PROJELER\\MERNBlog\\client\\src\\components\\Post.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":41,"nodeType":"60","messageId":"61","endLine":3,"endColumn":50},{"ruleId":"58","severity":1,"message":"62","line":3,"column":52,"nodeType":"60","messageId":"61","endLine":3,"endColumn":56},{"ruleId":"58","severity":1,"message":"63","line":4,"column":92,"nodeType":"60","messageId":"61","endLine":4,"endColumn":110},{"ruleId":"58","severity":1,"message":"64","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":23},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'makeSyles' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'DiaglogContentText' is defined but never used.","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]